# config für Brewery.jar


# -- Verschiedene Einstellungen --
# Standardeinstellungen sind in [] angegeben

# Sprachedatei die genutzt werden sollte (befindet sich in plugins/Brewery/languages)
language: de

# Ob der Spieler beim nächsten Einloggen nach starker Trunkenheit am nächsten morgen Zuhause "aufwacht" (Ein home Plugin muss installiert sein!) [true]
enableHome: true

# Art des Nachhause-teleports: ['cmd: home']
# bed = Spieler wird zu seinem Spawn Bett teleportiert
# 'cmd: home' = /home wird vom Spieler ausgelöst. Es sollte kein Verzögerungs, etc. plugin installiert sein!
# 'cmd: spawn' = /spawn wird vom Spieler ausgelöst
# 'cmd: whatever' = /whatever wird vom Spieler ausgelöst
homeType: 'cmd: home'

# Ob der Spieler nach etwas kürzerem Ausloggen an einem zufälligen Ort "aufwacht" (diese müssen durch '/brew Wakeup add' von einem Admin festgelegt werden)
# Der Spieler wacht an dem nähesten zweier zufälliger Orte aus seiner Welt auf. [true]
enableWake: true

# Ob der Spieler bei großer Trunkenheit mehrmals probieren muss sich einzuloggen, da sein Charakter kurz nicht reagiert [true]
enableLoginDisallow: true

# Ob der Spieler kurz in Ohnmacht fällt (vom Server gekickt wird) wenn er die maximale Trunkenheit erreicht [false]
enableKickOnOverdrink: false

# Ob der Spieler sich bei großer Trunkenheit übergibt (unten definiertes Item aus dem Mund fallen lässt) [true]
# Das Item kann nicht aufgesammelt werden und bleibt bis zum Despawnen liegen.
enablePuke: true

# Item das beim Erbrechen mehrfach unaufsammelbar fallen gelassen wird [SOUL_SAND]
pukeItem: SOUL_SAND

# Zeit in Sekunden bis die pukeitems despawnen, (mc standard wäre 300 = 5 min) [60]
# Wurde die item Despawnzeit in der spigot.yml verändert, verändert sich auch die pukeDespawnzeit in Abhängigkeit.
pukeDespawntime: 60

# Wie stark in Prozent der Spieler taumelt, je nach dem wie viel Alkohol er getrunken hat. Kann auf 0 und höher als 100 gesetzt werden
stumblePercent: 100

# Ob seine Betrunkenheit dem Spieler kurz angezeigt werden soll wenn er etwas trinkt oder ein drainItem isst. [true]
showStatusOnDrink: true

# Konsumierbares Item/Stärke. Senkt den Alkoholpegel um <Stärke> wenn konsumiert.
drainItems:
- BREAD/4
- MILK_BUCKET/2

# Partikel steigen von Kesseln auf wenn sie Zutaten und eine Feuerquelle haben [true]
# Die sich ändernde Farbe der Partikel kann beim Fermentieren mancher Rezepte helfen
enableCauldronParticles: true

# Ob das craften und das benutzen des Trank-Versiegelungs-Tisches aktiviert ist (2 Flaschen über 4 Holz) [true, true]
craftSealingTable: true
enableSealingTable: true

# Ob in den Iteminformationen immer 1-5 Sterne für die Qualität angezeigt werden sollen, oder nur beim brauen [true]
alwaysShowQuality: true

# Ob in den Iteminformationen immer der Alkoholgehalt angezeigt weden soll, oder nur im Braustand [false]
alwaysShowAlc: false

# Ob das reifen in -Minecraft- Fässern aktiviert ist und wie viele Brewery Getränke in die diese getan werden können [6]
ageInMCBarrels: true
maxBrewsInMCBarrels: 6

# Benutzte Zutaten und andere Brau-Daten werden in allen Brewery Tränken gespeichert. Um zu verhindern,
# dass gehackte clients diese Daten auslesen um Rezepte herauszufinden, können diese encodiert werden.
# Einziger Nachteil: Tränke können nur auf Servern mit dem gleichen encodeKey benutzt werden.
# Wenn Brewery Tränke auf mehreren (Bungeecord) Servern benutzt werden, unten unter 'multiServerDB' eine gemeinsame Datenbank eintragen.
# Dies kann also aktiviert werden um Rezept-cheating schwerer zu machen, aber keine Tränke per World Download, Schematic, o.ä. geteilt werden. [false]
enableEncode: false
encodeKey: 0

# Aktiviert das Suchen nach Updates für Brewery mit der curseforge api [true]
# Wenn ein Update gefunden wurde, wird dies bei Serverstart im log angezeigt, sowie OPs benachrichtigt
updateCheck: true

# Autosave Intervall in Minuten [3]
autosave: 3

# Debug Nachrichten im Log anzeigen [false]
debug: false

# Config Version
version: '3.0'
oldMat: true



# -- Eigene Items Definieren --
# Die festgelegte id kann dann in einem Rezept verwendet werden

#  matchAny: true wenn es schon reicht wenn eine der Angaben zutrifft
#  material: Welche Art das Item haben muss
#  name: Welchen Namen das Item haben muss (Farbcodes möglich: z.b. &6)
#  lore: Was in der Lore des Items stehen muss

customItems:
  bsp-item:
    #  Ein Bedrock Item das Mauer heißt und in der Lore die angegebene Zeile hat
    material: BEDROCK
    name: 'Mauer'
    lore:
      - '&7Besonders gut geschützt'

  bsp-item2:
    #  Mit matchAny muss nur eine der Angaben zutreffen.
    #  Hier also eine der Türarten, oder ein Item namens Buchenholztür, oder ein Item mit 'Eine Tür' in der Lore
    matchAny: true
    material:
      - WOODEN_DOOR
      - IRON_DOOR
    name:
      - 'Buchenholztür'
    lore:
      - 'Eine Tür'

  himbeere:
    name: '&cHimbeere'


# -- Zutaten im Kessel --
# Hier kann angegeben werden welche Zutaten in den Kessel getan werden können und was mit ihnen geschieht.
# Es braucht nur etwas hier eingetragen werden falls der Basistrank besondere Eigenschaften wie Name und Farbe haben soll

 # name: Name des Basistrankes der aus dem Kessel kommt (Farbcodes möglich: z.b. &6)
 # ingredients: Auflistung von 'Material/Anzahl'
 #   Halte ein Item in der Hand und benutze /brew ItemName um dessen Material herauszufinden und für ein Rezept zu benutzen
 #   (Item-ids anstatt Material können in Bukkit nicht mehr benutzt werden)
 #   Eine Liste von allen Materialien kann hier gefunden werden: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html
 # color: Farbe des Trankes der aus dem Kessel kommt
 #   Benutzbare Farben: DARK_RED, RED, BRIGHT_RED, ORANGE, PINK, BLUE, CYAN, WATER, GREEN, BLACK, GREY, BRIGHT_GREY
 #   Oder RGB Farben (Hex: also zB '99FF33') (Ohne #) (mit '') (Einfach nach "HTML color" im Internet suchen)
 # cookParticles:
 #   Farbe der Partikel über dem Kessel während verschiedener Kochzeiten
 #   Farbe und Minute während die Farbe erscheinen soll. Z.B. eine Farbe bei 8 Minuten, übergehend zu einer anderen bei 18 minuten
 #   Als Liste, jede Farbe als Name oder RGB wie oben. Geschrieben 'Farbe/Minute'
 #   Zum Ende geht es in die letzte Farbe über, gibt es nur eine Farbe in der Liste, wird es von dieser langsam zu grau.
 # lore: Auflistung von zusätzlichem Text auf dem Trank. (Farbcodes möglich: z.b. &6)
 # customModelData: Custom Model Data Modelldaten. Mit dieser Zahl kann die Tranktextur mit einem Resourcepack geändert werden


cauldron:
  bsp:
    name: Beispiel
    ingredients:
      - BEDROCK/2
      - DIAMOND
    color: BLACK
    cookParticles:
      - 'RED/5'
      - 'WHITE/10'
      - '800000/25' # maroon
    lore:
      - Ein Beispiel für einen Basistrank
      - So kommt er aus dem Kessel
    customModelData: 545

# -- Eine Zutat: --
  wheat:
    name: Getreideferment
    ingredients: WHEAT
    cookParticles:
      - '2d8686/8' # Dark Aqua

  sugarcane:
    name: Zuckersud
    ingredients: SUGAR_CANE
    color: 'f1ffad' # gelbliches grün
    cookParticles:
      - 'f1ffad/4'
      - '858547/10' # dark olive

  apple:
    name: Apfelmost
    ingredients: APPLE

  potato:
    name: Kartoffelmaische
    ingredients: POTATO_ITEM

  grass:
    name: Kräuterbrühe
    ingredients: LONG_GRASS
    color: '99ff66' # helles grün
    cookParticles:
      - 'GREEN/2'
      - '99ff99/20' # faded green

  rmushroom:
    name: Pilzsud
    ingredients: RED_MUSHROOM
    color: 'ff5c33' # bernsteinrot
    cookParticles:
      - 'fab09e/15' # faded red

  cocoa:
    name: Kakaobrühe
    ingredients: INK_SACK
    color: '804600' # mokka
    cookParticles:
      - 'a26011/1'
      - '5c370a/3'
      - '4d4133/8' # Gray-brown

  milk:
    name: Milchiges Wasser
    ingredients: MILK_BUCKET
    color: BRIGHT_GREY
    cookParticles:
      - 'fbfbd0/1' # yellow-white
      - 'WHITE/6'

  # -- Mehrere Zutaten: --
  apfelmet_basis:
    name: Apfel-Zuckersud
    ingredients:
      - SUGAR_CANE/3
      - APPLE
    color: 'e1ff4d' # grünliches gelb
    cookParticles:
      - 'e1ff4d/4'

# -- Age Obfuscation --

ageObfuscation:
  0: ''
  100: 'Jahrhundert'
  200: 'Hunderte Jahre'


# -- Rezepte für Getränke --

# name: Verschiedene Namen für schlecht/mittel/gut (Farbcodes möglich: z.b. &6)
# ingredients: Auflistung von 'Material,Data/Anzahl'
#   Halte ein Item in der Hand und benutze /brew ItemName um dessen Material herauszufinden und für ein Rezept zu benutzen
#   (Item-ids anstatt Material können in Bukkit nicht mehr benutzt werden)
#   Eine Liste von allen Materialien kann hier gefunden werden: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html
#   Es kann ein Data-Wert (durability) angegeben werden, weglassen ignoriert diesen beim hinzufügen einer Zutat
#   Plugin Items mit 'Plugin:Id' (Im Moment ExoticGarden, Slimefun, MMOItems, Brewery)
#   Oder ein oben definiertes Custom Item
# cookingtime: Zeit in Echtminuten die die Zutaten kochen müssen
# distillruns: Wie oft destilliert werden muss für vollen Alkoholgehalt (0=ohne Destillieren)
# distilltime: Wie lange (in sekunden) ein Destillations-Durchlauf braucht (0=Standard Zeit von 40 sek) MC Standard wäre 20 sek
# wood: Holz des Fasses 0=alle Holzsorten 1=Birke 2=Eiche 3=Jungel 4=Fichte 5=Akazie 6=Schwarzeiche 7=Karmesin 8=Wirr
#   Das Minecraft Fass besteht aus Eiche
# age: Zeit in Minecraft-Tagen, die das Getränk im Fass reifen muss 0= kein reifen
# color: Farbe des Getränks nach destillieren/reifen.
#   Benutzbare Farben: DARK_RED, RED, BRIGHT_RED, ORANGE, PINK, BLUE, CYAN, WATER, GREEN, BLACK, GREY, BRIGHT_GREY
#   Oder RGB Farben (Hex: also zB '99FF33') (Ohne #) (mit '') (Einfach nach "HTML color" im Internet suchen)
# difficulty: 1-10 Genauigkeit der Einhaltung der Vorgaben (1 = ungenau/einfach 10 = sehr genau/schwer)
# alcohol: Alkoholgehalt 0-100 in absoluter Menge bei perfektem Getränk (wird dem Spieler hinzugefügt, bei 100 = tot)
# lore: Auflistung von zusätzlichem Text auf dem fertigen Trank. (Farbcodes möglich: z.b. &6)
#   Lore nur für bestimmte Qualität möglich mit + Schlecht, ++ Mittel, +++ Gut, vorne anhängen.
# servercommands: Liste von Befehlen ausgeführt vom -Server- wenn der Trank getrunken wird (%player_name%  %quality% benutzbar)
# playercommands: Liste von Befehlen ausgeführt vom -Spieler- wenn der Trank getrunken wird (%player_name%  %quality% benutzbar)
#   Befehle nur für bestimmte Qualität möglich mit + Schlecht, ++ Mittel, +++ Gut, vorne anhängen.
# drinkmessage: Nachricht im Chat beim trinken des Trankes
# drinktitle: Nachricht als Titel auf dem Bildschirm an den Spieler beim trinken des Trankes
# customModelData: Custom Model Data Modelldaten. Mit dieser Zahl kann die Tranktextur mit einem Resourcepack geändert werden
#   Es kann eine für alle, oder drei für die qualitäten schlecht/normal/gut agegeben werden, mit / getrennt
# effects: Auflistung Effekt/Level/Dauer  Besonderere Trank-Effekte beim Trinken, Dauer in sek.
#   Ein 'X' an den Namen anhängen, um ihn zu verbergen. Bsp: 'POISONX/2/10' (WEAKNESS, INCREASE_DAMAGE, SLOW und SPEED sind immer verborgen.)
#   Effekte sind ab der 1.9 immer verborgen, wegen Änderungen an den Tränken.
#   Mögliche Effekte: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/potion/PotionEffectType.html
#   Minimale und Maximale Level/Dauer können durch "-" festgelegt werden, Bsp: 'SPEED/1-2/30-40' = Level 1 und 30 sek minimal, Level 2 und 40 sek maximal
#   Diese Bereiche funktionieren auch umgekehrt, Bsp: 'POISON/3-1/20-5' für abschwächende Effekte bei guter Qualität
#   Längste mögliche Effektdauer: 1638 sek. Es muss keine Dauer für Effekte mit sofortiger Wirkung angegeben werden.

recipes:
#  Ein vollständiges Beispiel zuerst:
   bsp:
      name: Schlechtes Beispiel/Beispiel/Gutes Beispiel
      ingredients:
      - DIAMOND/1
      - INK_SACK,3/20
      - WOOD,1/8
      - BEDROCK/1
      - Brewery:Weißbier/2
#     - ExoticGarden:Grape/3
      - bsp-item/4
      cookingtime: 3
      distillruns: 2
      distilltime: 60
      wood: 4
      age: 11
      color: DARK_RED
      difficulty: 3
      alcohol: 23
      lore:
      - Dies ist ein Beispiel Trank
      - ++Ganz normales Beispiel
      - Dies würde auf dem Trank stehen
      - + Riecht eklig
      - ++ Riecht ganz ok
      - +++ Riecht richtig gut
      servercommands:
      - +++ weather clear
      - + weather rain
      playercommands:
      - homes
      drinkmessage: Schmeckt toll
      drinktitle: Wärmt dich von innen
      customModelData: 556/557/557
      effects:
      - FIRE_RESISTANCE/20
      - HEAL/1
      - WEAKNESS/2-3/50-60
      - POISONX/1-0/20-0

   weißbier:
      name: Ranziges Weißbier/Weißbier/Feines Weißbier
      ingredients:
      - WHEAT/3
      cookingtime: 8
      distillruns: 0
      wood: 1
      age: 2
      color: BRIGHT_GREY
      difficulty: 1
      alcohol: 5

   bier:
      name: Ranziges Bier/Bier/Feines Bier
      ingredients:
      - WHEAT/6
      cookingtime: 8
      distillruns: 0
      wood: 0
      age: 3
      color: ORANGE
      difficulty: 1
      lore:
      - +++ &8Das perlt
      alcohol: 6

   dunkelbier:
      name: Ranziges Dunkelbier/Dunkelbier/Feines Dunkelbier
      ingredients:
      - WHEAT/6
      cookingtime: 8
      distillruns: 0
      wood: 4
      age: 8
      color: BLACK
      difficulty: 2
      alcohol: 7

   met:
      name: Scheußlicher Met/Met/&6Goldener Met
      ingredients:
      - SUGAR_CANE/6
      cookingtime: 3
      distillruns: 0
      wood: 2
      age: 4
      color: ORANGE
      difficulty: 2
      alcohol: 9
      lore:
      - +++ Hat einen goldenen Schein

   apfelmet:
      name: Apfelmet/Süßer Apfelmet/&6Goldensüßer Apfelmet
      ingredients:
      - SUGAR_CANE/6
      - APPLE/2
      cookingtime: 4
      distillruns: 0
      wood: 2
      age: 4
      color: ORANGE
      difficulty: 4
      alcohol: 12
      lore:
      - + Ist da wirklich Apfel drin?
      - ++ Schmeckt nach süßem Apfel
      - +++ Hat eine wunderbare Apfelnote
      effects:
      - WATER_BREATHINGX/1-2/150

   rum:
      name: Bitterer Rum/Würziger Rum/&6Goldener Rum
      ingredients:
      - SUGAR_CANE/14
      cookingtime: 5
      distillruns: 2
      distilltime: 30
      wood: 2
      age: 14
      color: DARK_RED
      difficulty: 6
      alcohol: 30
      effects:
      - FIRE_RESISTANCE/1/20-100
      - POISONX/1-0/30-0

   vodka:
      name: Abgeranzter Vodka/Vodka/Russischer Vodka
      ingredients:
      - POTATO_ITEM/10
      cookingtime: 15
      distillruns: 3
      age: 0
      color: BRIGHT_GREY
      difficulty: 4
      alcohol: 20
      lore:
      - + &8Fast nicht trinkbar
      effects:
      - WEAKNESS/15
      - POISON/10

   absinth:
      name: minderwertiger Absinth/Absinth/Starker Absinth
      ingredients:
      - LONG_GRASS/15
      cookingtime: 3
      distillruns: 6
      distilltime: 80
      color: GREEN
      difficulty: 8
      alcohol: 45
      effects:
      - POISON/20-30

   kartoffelsuppe:
      name: Kartoffelsuppe
      ingredients:
      - POTATO_ITEM/5
      - LONG_GRASS/3
      cookingtime: 3
      color: PINK
      difficulty: 1
      effects:
      - HEAL/0-1

   kaffee:
      name: Fader Kaffee/Kaffee/Starker Kaffee
      ingredients:
      - INK_SACK,3/12
      - MILK_BUCKET/2
      cookingtime: 2
      color: BLACK
      difficulty: 3
      lore: + &8Bestimmt schon eine Woche alt
      effects:
      - REGENERATION/1/2-5
      - SPEED/1/30-140

# Mehr Ideen für Rezepte: Cachaca, Gin, Whiskey, Tequila, Cidre, etc, sowie Rezeptvarianten wie Goldener Vodka etc.
# Ich werde keine weiteren Rezepte zu dieser Standardconfig hinzufügen, da diese öffentlich und für Spieler zum Abschauen einsehbar wären
# Der Serveradmin kann neue Rezepte hinzufügen und bestehende ändern, um das Abschauen aus der Standardconfig zu verhindern.


# -- Plugin Kompatiblität --

# Andere Plugins (wenn installiert) nach Rechten zum öffnen von Fässern checken [true]
# Plugins 'Landlord' und 'Protection Stones' nutzen WorldGuard. 'ClaimChunk' wird nativ unterstützt.
useWorldGuard: true
useLWC: true
useGriefPrevention: true
useTowny: true
useBlockLocker: true
useGMInventories: true
useCitadel: true

# Beim öffnen eine virtuelle Kiste nutzen um Rechte bei alle anderen Plugins abzufragen
# Könnte Anti-Cheat plugins verwirren aber sonst ok zu aktivieren
# Diese Option für das Plugin 'Residence' aktivieren, und andere Plugins, die nicht alle Fälle des PlayerInteractEvent checken
useVirtualChestPerms: false

# Änderungen an Fassinventaren mit LogBlock aufzeichen [true]
useLogBlock: true


# -- MultiServer/BungeeCord --
# Wenn Brewery auf mehreren Servern läuft und diese zB mit BungeeCord verbunden sind,
# sollte hier eine gemeinsame Datenbank eingetragen werden.
# Dann wird Betrunkenheit auf den Servern synchronisiert und encodierte Tränke können auf allen Servern benutzt werden.

multiServerDB:
  # Soll die Datenbank-Synchronisation aktiviert sein
  enabled: false
  # Soll die Betrunkenheit von Spielern synchronisiert werden
  syncDrunkeness: true
  host: localhost
  port: '3306'
  user: minec
  password: xyz
  database: base


# -- Verschiedene weitere Einstellungen --

# Ob Items in der Zweithand auch in den Kessel geworfen werden sollen [false]
useOffhandForCauldron: false

# Of Fass- und Kesseldaten Async/im Hintergrund geladen werden können [true]
loadDataAsync: true

# Zeit (in Tagen) die Trunkenheitsdaten nach offlinegehen eines Spielers im Speicher verbleiben, um z.B. Kater-Effekte anzuwenden. [7]
hangoverDays: 7

# Färben der Iteminformationen je nach Qualität während sie sich 1. im Fass und/oder 2. im Braustand befinden [true, true]
colorInBarrels: true
colorInBrewer: true

# Ob große Fässer an jedem Block geöffnet werden können, nicht nur an Zapfhahn und Schild. Bei kleinen Fässern geht dies immer. [true]
openLargeBarrelEverywhere: true

# Ob nur ein Minimum an Kessel-Partikeln dargestellt werden sollen [false]
minimalParticles: false


# -- Chat Veränderungs Einstellungen --

# Ob geschriebener Chat bei großer Trunkenheit abgefälscht werden soll,
# so dass es etwas betrunken aussieht was geschrieben wird.
# Wie stark der Chat verändert wird hängt davon ab wie betrunken der Spieler ist
# Unten kann noch eingestellt werden wie und was verändert wird
enableChatDistortion: true

# In den Serverlog loggen was der Spieler tatsächlich geschrieben hat, bevor seine Worte verändert wurden [false]
logRealChat: false

# Text nach den angegebenen Kommandos wird bei Trunkenheit ebenfalls Verändert (Liste) [- /gl]
distortCommands:
- /gl
- /global
- /fl
- /s
- /letter
- /g
- /l
- /lokal
- /local
- /mail send
- /m
- /msg
- /w
- /whisper
- /reply
- /r
- /t
- /tell

# Geschriebenen Text auf Schildern bei Trunkenheit verändern [false]
distortSignText: false

# Im Chat geschriebener Text, der zwischen diesen Buchstaben steht, wird nicht verändert ("," als Trennung verwenden) (Liste) [- '[,]']
# Also zum Beispiel im Chat: Hallo ich bin betrunken *Ich teste Brewery*
distortBypass:
- '*,*'
- '[,]'

# words: Wörter und Buchstaben die bei Chatten während Trunkenheit ersetzt werden sollen.
# Diese werden von oben nach unten gelesen und in dieser Reihenfolge wird ein geschriebener Satz dann verändert.

# replace: Zu ersetzendes Wort oder Buchstabe.   (Besondere: "-space": ersetzt Leerzeichen, "-random": Einfügen in zufällige Position, "-all": Alles, "-start": Ganz am Anfang, "-end": Ganz ans Ende.)
# to: In welches Wort es ersetzt werden soll.
# pre: Wörter und Buchstaben vor dem gesuchten Wort (durch "," getrennt)
# match: true = eines der "pre"-Wörter muss vor dem gesuchten Wort stehen,  false = keines der "pre" Wörter darf vor dem gesuchten stehen
# alcohol: 1-100 Trunkenheit ab der die Wörter ersetzt werden
# percentage: Wahrscheinlichkeit des Ersetzen eines Wortes in Prozent

words:
-  replace: ch
   to: sch
   pre: u,s,o,a
   match: false
   alcohol: 10
   percentage: 70

-  replace: h
   to: hh
   pre: sch,h,t
   match: false
   percentage: 60
   alcohol: 20

-  replace: u
   to: uuh
   percentage: 20

-  replace: u
   to: uo
   pre: u
   match: false
   percentage: 60

-  replace: das
   to: dass
   percentage: 20
   alcohol: 40

-  replace: p
   to: b
   percentage: 30

-  replace: p
   to: b
   percentage: 70
   alcohol: 60

-  replace: up
   to: ubb
   percentage: 80

-  replace: o
   to: oh
   percentage: 20

-  replace: ei
   to: i
   percentage: 15

-  replace: b
   to: bb
   percentage: 80
   alcohol: 40

-  replace: '!!!'
   to: '!!!111!!!einself!1!'
   pre: '!'
   match: false
   percentage: 20
   alcohol: 70

-  replace: '!'
   to: '!!'
   pre: '!'
   match: false
   percentage: 90

-  replace: betrunken
   to: brhetriunkhn
   pre: bist,seid
   match: false
   percentage: 70
   alcohol: 65

-  replace: laufen
   to: lnhfeeehn
   pre: kannst,kannst noch,kannst nicht
   match: false
   percentage: 80
   alcohol: 30

-  replace: gehen
   to: hgheehn
   pre: kannst,kannst noch,kannst nicht
   match: false
   percentage: 80
   alcohol: 40

-  replace: wtf
   to: wft
   percentage: 20
   alcohol: 40

-  replace: lol
   to: loool
   percentage: 80
   alcohol: 10

-  replace: afk
   to: aafka
   percentage: 20
   alcohol: 30

-  replace: schreiben
   to: schribeen
   pre: kannst,kannst noch,kannst nicht
   match: false
   percentage: 80
   alcohol: 50

-  replace: trinken
   to: saufen
   percentage: 80
   alcohol: 70

-  replace: '?'
   to: '????'
   pre: '?'
   match: false
   percentage: 80
   alcohol: 40

-  replace: -space
   to: ''
   pre: h,g,w
   match: true
   alcohol: 10

-  replace: -space
   to: ''
   percentage: 30
   alcohol: 35

-  replace: -space
   to: ''
   percentage: 10

-  replace: -start
   to: dho
   percentage: 15
   alcohol: 50

-  replace: -start
   to: hhn
   percentage: 10
   alcohol: 50

-  replace: -random
   to: lug
   percentage: 10

-  replace: -random
   to: lu
   percentage: 20
   alcohol: 40

-  replace: -random
   to: blub
   percentage: 20
   alcohol: 70

-  replace: -random
   to: lerg
   percentage: 40
   alcohol: 75

-  replace: -random
   to: gul
   percentage: 50
   alcohol: 80

-  replace: -random
   to: ' '
   percentage: 100
   alcohol: 70

-  replace: -random
   to: ' '
   percentage: 60
   alcohol: 40

-  replace: -random
   to: ' '
   percentage: 50
   alcohol: 30

-  replace: -end
   to: '!'
   percentage: 40
   alcohol: 30

-  replace: -random
   to: ' *hicks* '
   percentage: 80
   alcohol: 70

-  replace: -random
   to: ' *hicks* '
   percentage: 15
   alcohol: 40

-  replace: -space
   to: ' *hicks* '
   percentage: 5
   alcohol: 20

-  replace: -end
   to: ' *hicks*'
   percentage: 70
   alcohol: 50

-  replace: -all
   to: '*rülps*'
   percentage: 3
   alcohol: 60
